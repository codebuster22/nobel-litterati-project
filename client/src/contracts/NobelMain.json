{
  "contractName": "NobelMain",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_litter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initial_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minting_allowance_per_call",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cool_down_time_per_mint",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_litterUri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_caption",
          "type": "string"
        }
      ],
      "name": "createNobelLitter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLittersContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "litter_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNobelsContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "nobel_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_checker",
          "type": "address"
        }
      ],
      "name": "getBalanceOfLitter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_checker",
          "type": "address"
        }
      ],
      "name": "getBalanceOfNobels",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_litter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initial_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minting_allowance_per_call\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cool_down_time_per_mint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_litterUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_caption\",\"type\":\"string\"}],\"name\":\"createNobelLitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_checker\",\"type\":\"address\"}],\"name\":\"getBalanceOfLitter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_checker\",\"type\":\"address\"}],\"name\":\"getBalanceOfNobels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLittersContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"litter_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNobelsContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nobel_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelMain.sol\":\"NobelMain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelMain.sol\":{\"keccak256\":\"0xb2dddb991f6ed21d99b48afca8a934ea7595d1afdaa31c8b8254d18f61fc7c7c\",\"urls\":[\"bzz-raw://59b0b4b8df28c68ac9bdcb79628e14cc8367bf05775c4089a7ff62aaf9d9f7c0\",\"dweb:/ipfs/QmPZjanHXbD61D1rMtMVEQkdJqbybVhAWX4brWSf74oRLw\"]},\"/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelToken.sol\":{\"keccak256\":\"0xb00c168941f2c4f68a4b978d1083b435b39217e8036621f9ec863cf760948d17\",\"urls\":[\"bzz-raw://951b14fa57329775e5d2ca4888e8cf8236c3cc81fd22b1c7108dc23f7ece7b69\",\"dweb:/ipfs/QmVRdY5x5o9Bp6KCm3CM8qeEVnS9gATSyEMGKcUhdPMTG1\"]},\"/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/OpenNFT.sol\":{\"keccak256\":\"0x6c002b0cc0dc1c654e166b7ad685e983ac050f1852046e9c3ac10aa3f9b3cae2\",\"urls\":[\"bzz-raw://c23409005b3894f7fde3aaa31e8274c934ff026610b896d75a85d883f6671b82\",\"dweb:/ipfs/QmdiEexaRyPkWhevWCg2V89NaiZWBFqr37V6ibjz1RmGfW\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x0d616363c1a1e6f9f489303f94df0cbe606826ab4944d315c3801a07f9b8d4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://976cf80d02556929369fc98196c4082f204e44e682e20d3f65cc61b31e29bf76\",\"dweb:/ipfs/Qmeo1vvf7L3PLLDPNSVuVyirLB3FrCYKMFw3JZ7EXgC5YU\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x86b0abb859d38e6909101e8dce6fad76543cd1443788b049fd182379b42cb6e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b057ad3b90ede81cefcc6f46d08a55b1f3b0f89638e21499221fea2aed3304\",\"dweb:/ipfs/QmYwVSzxHm7pX5ANvWhJG1JUP64BL8VWnozfpeQQNwFtp3\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xca9e98786cd7d8060e08a9f5aaf6dbd7da9d51afe3232c06c5a49ea49490c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355eccc0746e3d44001d248077efece51418d44b226d27de33930ff03ebd8103\",\"dweb:/ipfs/QmcMZjhmDVuiF1AWLEnbUAzuq2RMZVQP1ChoZV63bU8EgE\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://379879e94763b61c652f914da987a603fb1fec35645a1d6b8022413cf1c3a467\",\"dweb:/ipfs/QmVkFoHVN6XWztbJDHrWfMCRPV4QsbFGj6QPZYeMjQRfhr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea28aa69470f0f5bb38095c59d2d68db03fc52faa5640de4486a188ecc168870\",\"dweb:/ipfs/QmdwRX791f2gdkxLfzQLcyx3ZLvSjGd2wdX8gXFi8sH2uW\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004db138038062004db18339818101604052810190620000379190620001f3565b600062000049620001af60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508282826040516200013990620001b7565b620001479392919062000270565b604051809103906000f08015801562000164573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200031f565b600033905090565b613d4b806200106683390190565b600081519050620001d681620002eb565b92915050565b600081519050620001ed8162000305565b92915050565b600080600080608085870312156200020a57600080fd5b60006200021a87828801620001c5565b94505060206200022d87828801620001dc565b93505060406200024087828801620001dc565b92505060606200025387828801620001dc565b91505092959194509250565b6200026a81620002e1565b82525050565b60006060820190506200028760008301866200025f565b6200029660208301856200025f565b620002a560408301846200025f565b949350505050565b6000620002ba82620002c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002f681620002ad565b81146200030257600080fd5b50565b6200031081620002e1565b81146200031c57600080fd5b50565b610d37806200032f6000396000f3fe608060405234801561001057600080fd5b506004361061008c5760003560e01c80638da5cb5b1161005b5780638da5cb5b14610108578063e968095f14610126578063f2fde38b14610156578063f483cdf0146101725761008d565b8063331c62f8146100925780636a1f94b1146100b0578063715018a6146100ce57806378a65fb1146100d85761008d565b5b600080fd5b61009a61018e565b6040516100a791906109f3565b60405180910390f35b6100b86101b8565b6040516100c591906109f3565b60405180910390f35b6100d66101e2565b005b6100f260048036038101906100ed919061086f565b61031c565b6040516100ff9190610abc565b60405180910390f35b6101106103d0565b60405161011d91906109f3565b60405180910390f35b610140600480360381019061013b919061086f565b6103f9565b60405161014d9190610abc565b60405180910390f35b610170600480360381019061016b919061086f565b6104ad565b005b61018c600480360381019061018791906108c1565b610656565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ea6107c0565b73ffffffffffffffffffffffffffffffffffffffff166102086103d0565b73ffffffffffffffffffffffffffffffffffffffff161461025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610a9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161037991906109f3565b60206040518083038186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c9919061092d565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161045691906109f3565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a6919061092d565b9050919050565b6104b56107c0565b73ffffffffffffffffffffffffffffffffffffffff166104d36103d0565b73ffffffffffffffffffffffffffffffffffffffff1614610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052090610a9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090610a7c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b564a7c3385856040518463ffffffff1660e01b81526004016106b793929190610a0e565b602060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610709919061092d565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610768929190610a53565b602060405180830381600087803b15801561078257600080fd5b505af1158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba9190610898565b50505050565b600033905090565b60006107db6107d684610afc565b610ad7565b9050828152602081018484840111156107f357600080fd5b6107fe848285610b91565b509392505050565b60008135905061081581610cbc565b92915050565b60008151905061082a81610cd3565b92915050565b600082601f83011261084157600080fd5b81356108518482602086016107c8565b91505092915050565b60008151905061086981610cea565b92915050565b60006020828403121561088157600080fd5b600061088f84828501610806565b91505092915050565b6000602082840312156108aa57600080fd5b60006108b88482850161081b565b91505092915050565b600080604083850312156108d457600080fd5b600083013567ffffffffffffffff8111156108ee57600080fd5b6108fa85828601610830565b925050602083013567ffffffffffffffff81111561091757600080fd5b61092385828601610830565b9150509250929050565b60006020828403121561093f57600080fd5b600061094d8482850161085a565b91505092915050565b61095f81610b49565b82525050565b600061097082610b2d565b61097a8185610b38565b935061098a818560208601610ba0565b61099381610c33565b840191505092915050565b60006109ab602683610b38565b91506109b682610c44565b604082019050919050565b60006109ce602083610b38565b91506109d982610c93565b602082019050919050565b6109ed81610b87565b82525050565b6000602082019050610a086000830184610956565b92915050565b6000606082019050610a236000830186610956565b8181036020830152610a358185610965565b90508181036040830152610a498184610965565b9050949350505050565b6000604082019050610a686000830185610956565b610a7560208301846109e4565b9392505050565b60006020820190508181036000830152610a958161099e565b9050919050565b60006020820190508181036000830152610ab5816109c1565b9050919050565b6000602082019050610ad160008301846109e4565b92915050565b6000610ae1610af2565b9050610aed8282610bd3565b919050565b6000604051905090565b600067ffffffffffffffff821115610b1757610b16610c04565b5b610b2082610c33565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610b5482610b67565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610bbe578082015181840152602081019050610ba3565b83811115610bcd576000848401525b50505050565b610bdc82610c33565b810181811067ffffffffffffffff82111715610bfb57610bfa610c04565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610cc581610b49565b8114610cd057600080fd5b50565b610cdc81610b5b565b8114610ce757600080fd5b50565b610cf381610b87565b8114610cfe57600080fd5b5056fea26469706673582212206254184f8e86ce8a29d86338ce2ee5c54308d0c891b1e2a0ceb4bbd1610a3c2664736f6c6343000803003360806040526127106008556143806009553480156200001d57600080fd5b5060405162003d4b38038062003d4b833981810160405281019062000043919062000744565b6040518060400160405280600b81526020017f4e6f62656c20546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4254000000000000000000000000000000000000000000000000000000000081525081818160059080519060200190620000c99291906200067d565b508060069080519060200190620000e29291906200067d565b5050506000600760006101000a81548160ff021916908315150217905550620001246000801b62000118620001d860201b60201c565b620001e060201b60201c565b620001657f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a662000159620001d860201b60201c565b620001e060201b60201c565b620001a67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200019a620001d860201b60201c565b620001e060201b60201c565b5050620001ba33846200022860201b60201c565b816008819055508060098190555042600a81905550505050620009f8565b600033905090565b620001f782826200038e60201b62000f891760201c565b620002238160016000858152602001908152602001600020620003a460201b62000f971790919060201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200029b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200029290620007f9565b60405180910390fd5b620002af60008383620003dc60201b60201c565b8060046000828254620002c391906200086b565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200031b91906200086b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200038291906200083d565b60405180910390a35050565b620003a08282620003f960201b60201c565b5050565b6000620003d4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620004ea60201b60201c565b905092915050565b620003f48383836200056460201b62000fc71760201c565b505050565b6200040b8282620005d460201b60201c565b620004e657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200048b620001d860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620004fe83836200063e60201b60201c565b620005595782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200055e565b600090505b92915050565b6200057c8383836200066160201b6200101f1760201c565b6200058c6200066660201b60201c565b15620005cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005c6906200081b565b60405180910390fd5b505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b505050565b6000600760009054906101000a900460ff16905090565b8280546200068b90620008d2565b90600052602060002090601f016020900481019282620006af5760008555620006fb565b82601f10620006ca57805160ff1916838001178555620006fb565b82800160010185558215620006fb579182015b82811115620006fa578251825591602001919060010190620006dd565b5b5090506200070a91906200070e565b5090565b5b80821115620007295760008160009055506001016200070f565b5090565b6000815190506200073e81620009de565b92915050565b6000806000606084860312156200075a57600080fd5b60006200076a868287016200072d565b93505060206200077d868287016200072d565b925050604062000790868287016200072d565b9150509250925092565b6000620007a9601f836200085a565b9150620007b68262000966565b602082019050919050565b6000620007d0602a836200085a565b9150620007dd826200098f565b604082019050919050565b620007f381620008c8565b82525050565b6000602082019050818103600083015262000814816200079a565b9050919050565b600060208201905081810360008301526200083681620007c1565b9050919050565b6000602082019050620008546000830184620007e8565b92915050565b600082825260208201905092915050565b60006200087882620008c8565b91506200088583620008c8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620008bd57620008bc62000908565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620008eb57607f821691505b6020821081141562000902576200090162000937565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008201527f696c652070617573656400000000000000000000000000000000000000000000602082015250565b620009e981620008c8565b8114620009f557600080fd5b50565b6133438062000a086000396000f3fe608060405234801561001057600080fd5b50600436106101e95760003560e01c806379cc67901161010f578063a9059cbb116100a2578063d539139311610071578063d5391393146105ad578063d547741f146105cb578063dd62ed3e146105e7578063e63ab1e914610617576101ea565b8063a9059cbb14610511578063aecfe50514610541578063ca15c8731461055f578063d2cdaf381461058f576101ea565b806395d89b41116100de57806395d89b4114610487578063a217fddf146104a5578063a457c2d7146104c3578063a606fb59146104f3576101ea565b806379cc6790146104015780638456cb591461041d5780639010d07c1461042757806391d1485414610457576101ea565b8063313ce5671161018757806340c10f191161015657806340c10f191461037b57806342966c68146103975780635c975abb146103b357806370a08231146103d1576101ea565b8063313ce5671461030757806336568abe1461032557806339509351146103415780633f4ba83a14610371576101ea565b806318160ddd116101c357806318160ddd1461026d57806323b872dd1461028b578063248a9ca3146102bb5780632f2ff15d146102eb576101ea565b806301ffc9a7146101ef57806306fdde031461021f578063095ea7b31461023d576101ea565b5b600080fd5b610209600480360381019061020491906122a7565b610635565b60405161021691906126bd565b60405180910390f35b6102276106af565b60405161023491906126f3565b60405180910390f35b610257600480360381019061025291906121ca565b610741565b60405161026491906126bd565b60405180910390f35b61027561075f565b60405161028291906129f5565b60405180910390f35b6102a560048036038101906102a0919061217b565b610769565b6040516102b291906126bd565b60405180910390f35b6102d560048036038101906102d09190612206565b61086a565b6040516102e291906126d8565b60405180910390f35b6103056004803603810190610300919061222f565b610889565b005b61030f6108bd565b60405161031c9190612a10565b60405180910390f35b61033f600480360381019061033a919061222f565b6108c2565b005b61035b600480360381019061035691906121ca565b6108f6565b60405161036891906126bd565b60405180910390f35b6103796109a2565b005b610395600480360381019061039091906121ca565b610a1c565b005b6103b160048036038101906103ac91906122d0565b610a9a565b005b6103bb610aae565b6040516103c891906126bd565b60405180910390f35b6103eb60048036038101906103e69190612116565b610ac5565b6040516103f891906129f5565b60405180910390f35b61041b600480360381019061041691906121ca565b610b0e565b005b610425610b92565b005b610441600480360381019061043c919061226b565b610c0c565b60405161044e91906126a2565b60405180910390f35b610471600480360381019061046c919061222f565b610c3b565b60405161047e91906126bd565b60405180910390f35b61048f610ca5565b60405161049c91906126f3565b60405180910390f35b6104ad610d37565b6040516104ba91906126d8565b60405180910390f35b6104dd60048036038101906104d891906121ca565b610d3e565b6040516104ea91906126bd565b60405180910390f35b6104fb610e32565b60405161050891906129f5565b60405180910390f35b61052b600480360381019061052691906121ca565b610e38565b60405161053891906126bd565b60405180910390f35b610549610e56565b60405161055691906129f5565b60405180910390f35b61057960048036038101906105749190612206565b610e5c565b60405161058691906129f5565b60405180910390f35b610597610e80565b6040516105a491906129f5565b60405180910390f35b6105b5610e86565b6040516105c291906126d8565b60405180910390f35b6105e560048036038101906105e0919061222f565b610eaa565b005b61060160048036038101906105fc919061213f565b610ede565b60405161060e91906129f5565b60405180910390f35b61061f610f65565b60405161062c91906126d8565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106a857506106a782611024565b5b9050919050565b6060600580546106be90612b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546106ea90612b8f565b80156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b5050505050905090565b600061075561074e61109e565b84846110a6565b6001905092915050565b6000600454905090565b6000610776848484611271565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107c161109e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890612895565b60405180910390fd5b61085e8561084d61109e565b85846108599190612a9d565b6110a6565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b61089382826114f3565b6108b88160016000858152602001908152602001600020610f9790919063ffffffff16565b505050565b600090565b6108cc8282611559565b6108f181600160008581526020019081526020016000206115dc90919063ffffffff16565b505050565b600061099861090361109e565b84846003600061091161109e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109939190612a47565b6110a6565b6001905092915050565b6109d37f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109ce61109e565b610c3b565b610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a09906127b5565b60405180910390fd5b610a1a61160c565b565b610a4d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a4861109e565b610c3b565b610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a83906128b5565b60405180910390fd5b610a9682826116ae565b5050565b610aab610aa561109e565b8261175c565b50565b6000600760009054906101000a900460ff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610b2183610b1c61109e565b610ede565b905081811015610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d906128d5565b60405180910390fd5b610b8383610b7261109e565b8484610b7e9190612a9d565b6110a6565b610b8d838361175c565b505050565b610bc37f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610bbe61109e565b610c3b565b610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990612955565b60405180910390fd5b610c0a611932565b565b6000610c3382600160008681526020019081526020016000206119d590919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060068054610cb490612b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce090612b8f565b8015610d2d5780601f10610d0257610100808354040283529160200191610d2d565b820191906000526020600020905b815481529060010190602001808311610d1057829003601f168201915b5050505050905090565b6000801b81565b60008060036000610d4d61109e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610e0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0190612975565b60405180910390fd5b610e27610e1561109e565b858584610e229190612a9d565b6110a6565b600191505092915050565b60095481565b6000610e4c610e4561109e565b8484611271565b6001905092915050565b60085481565b6000610e79600160008481526020019081526020016000206119ef565b9050919050565b600a5481565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610eb48282611a04565b610ed981600160008581526020019081526020016000206115dc90919063ffffffff16565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b610f938282611a6a565b5050565b6000610fbf836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b4a565b905092915050565b610fd283838361101f565b610fda610aae565b1561101a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611011906129d5565b60405180910390fd5b505050565b505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611097575061109682611bba565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d90612935565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117d906127f5565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161126491906129f5565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d890612915565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134890612735565b60405180910390fd5b61135c838383611c24565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113da90612835565b60405180910390fd5b81816113ef9190612a9d565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114819190612a47565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114e591906129f5565b60405180910390a350505050565b61150c6114ff8361086a565b61150761109e565b610c3b565b61154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154290612755565b60405180910390fd5b6115558282611a6a565b5050565b61156161109e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c590612995565b60405180910390fd5b6115d88282611c34565b5050565b6000611604836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d15565b905092915050565b611614610aae565b611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164a90612775565b60405180910390fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61169761109e565b6040516116a491906126a2565b60405180910390a1565b600954600a54426116bf9190612a9d565b1015611700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f7906127d5565b60405180910390fd5b80600854811115611746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173d90612815565b60405180910390fd5b42600a819055506117578383611e9f565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c3906128f5565b60405180910390fd5b6117d882600083611c24565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561185f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185690612795565b60405180910390fd5b818161186b9190612a9d565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008282546118c09190612a9d565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161192591906129f5565b60405180910390a3505050565b61193a610aae565b1561197a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197190612875565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119be61109e565b6040516119cb91906126a2565b60405180910390a1565b60006119e48360000183611ff4565b60001c905092915050565b60006119fd8260000161208e565b9050919050565b611a1d611a108361086a565b611a1861109e565b610c3b565b611a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5390612855565b60405180910390fd5b611a668282611c34565b5050565b611a748282610c3b565b611b4657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611aeb61109e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000611b56838361209f565b611baf578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611bb4565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611c2f838383610fc7565b505050565b611c3e8282610c3b565b15611d1157600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611cb661109e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008083600101600084815260200190815260200160002054905060008114611e93576000600182611d479190612a9d565b9050600060018660000180549050611d5f9190612a9d565b90506000866000018281548110611d9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110611de9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550600183611e049190612a47565b8760010160008381526020019081526020016000208190555086600001805480611e57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611e99565b60009150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f06906129b5565b60405180910390fd5b611f1b60008383611c24565b8060046000828254611f2d9190612a47565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611f839190612a47565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611fe891906129f5565b60405180910390a35050565b60008183600001805490501161203f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203690612715565b60405180910390fd5b82600001828154811061207b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000813590506120d1816132b1565b92915050565b6000813590506120e6816132c8565b92915050565b6000813590506120fb816132df565b92915050565b600081359050612110816132f6565b92915050565b60006020828403121561212857600080fd5b6000612136848285016120c2565b91505092915050565b6000806040838503121561215257600080fd5b6000612160858286016120c2565b9250506020612171858286016120c2565b9150509250929050565b60008060006060848603121561219057600080fd5b600061219e868287016120c2565b93505060206121af868287016120c2565b92505060406121c086828701612101565b9150509250925092565b600080604083850312156121dd57600080fd5b60006121eb858286016120c2565b92505060206121fc85828601612101565b9150509250929050565b60006020828403121561221857600080fd5b6000612226848285016120d7565b91505092915050565b6000806040838503121561224257600080fd5b6000612250858286016120d7565b9250506020612261858286016120c2565b9150509250929050565b6000806040838503121561227e57600080fd5b600061228c858286016120d7565b925050602061229d85828601612101565b9150509250929050565b6000602082840312156122b957600080fd5b60006122c7848285016120ec565b91505092915050565b6000602082840312156122e257600080fd5b60006122f084828501612101565b91505092915050565b61230281612ad1565b82525050565b61231181612ae3565b82525050565b61232081612aef565b82525050565b600061233182612a2b565b61233b8185612a36565b935061234b818560208601612b5c565b61235481612c1f565b840191505092915050565b600061236c602283612a36565b915061237782612c30565b604082019050919050565b600061238f602383612a36565b915061239a82612c7f565b604082019050919050565b60006123b2602f83612a36565b91506123bd82612cce565b604082019050919050565b60006123d5601483612a36565b91506123e082612d1d565b602082019050919050565b60006123f8602283612a36565b915061240382612d46565b604082019050919050565b600061241b603983612a36565b915061242682612d95565b604082019050919050565b600061243e602f83612a36565b915061244982612de4565b604082019050919050565b6000612461602283612a36565b915061246c82612e33565b604082019050919050565b6000612484601f83612a36565b915061248f82612e82565b602082019050919050565b60006124a7602683612a36565b91506124b282612eab565b604082019050919050565b60006124ca603083612a36565b91506124d582612efa565b604082019050919050565b60006124ed601083612a36565b91506124f882612f49565b602082019050919050565b6000612510602883612a36565b915061251b82612f72565b604082019050919050565b6000612533603683612a36565b915061253e82612fc1565b604082019050919050565b6000612556602483612a36565b915061256182613010565b604082019050919050565b6000612579602183612a36565b91506125848261305f565b604082019050919050565b600061259c602583612a36565b91506125a7826130ae565b604082019050919050565b60006125bf602483612a36565b91506125ca826130fd565b604082019050919050565b60006125e2603783612a36565b91506125ed8261314c565b604082019050919050565b6000612605602583612a36565b91506126108261319b565b604082019050919050565b6000612628602f83612a36565b9150612633826131ea565b604082019050919050565b600061264b601f83612a36565b915061265682613239565b602082019050919050565b600061266e602a83612a36565b915061267982613262565b604082019050919050565b61268d81612b45565b82525050565b61269c81612b4f565b82525050565b60006020820190506126b760008301846122f9565b92915050565b60006020820190506126d26000830184612308565b92915050565b60006020820190506126ed6000830184612317565b92915050565b6000602082019050818103600083015261270d8184612326565b905092915050565b6000602082019050818103600083015261272e8161235f565b9050919050565b6000602082019050818103600083015261274e81612382565b9050919050565b6000602082019050818103600083015261276e816123a5565b9050919050565b6000602082019050818103600083015261278e816123c8565b9050919050565b600060208201905081810360008301526127ae816123eb565b9050919050565b600060208201905081810360008301526127ce8161240e565b9050919050565b600060208201905081810360008301526127ee81612431565b9050919050565b6000602082019050818103600083015261280e81612454565b9050919050565b6000602082019050818103600083015261282e81612477565b9050919050565b6000602082019050818103600083015261284e8161249a565b9050919050565b6000602082019050818103600083015261286e816124bd565b9050919050565b6000602082019050818103600083015261288e816124e0565b9050919050565b600060208201905081810360008301526128ae81612503565b9050919050565b600060208201905081810360008301526128ce81612526565b9050919050565b600060208201905081810360008301526128ee81612549565b9050919050565b6000602082019050818103600083015261290e8161256c565b9050919050565b6000602082019050818103600083015261292e8161258f565b9050919050565b6000602082019050818103600083015261294e816125b2565b9050919050565b6000602082019050818103600083015261296e816125d5565b9050919050565b6000602082019050818103600083015261298e816125f8565b9050919050565b600060208201905081810360008301526129ae8161261b565b9050919050565b600060208201905081810360008301526129ce8161263e565b9050919050565b600060208201905081810360008301526129ee81612661565b9050919050565b6000602082019050612a0a6000830184612684565b92915050565b6000602082019050612a256000830184612693565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612a5282612b45565b9150612a5d83612b45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a9257612a91612bc1565b5b828201905092915050565b6000612aa882612b45565b9150612ab383612b45565b925082821015612ac657612ac5612bc1565b5b828203905092915050565b6000612adc82612b25565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612b7a578082015181840152602081019050612b5f565b83811115612b89576000848401525b50505050565b60006002820490506001821680612ba757607f821691505b60208210811415612bbb57612bba612bf0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f206772616e740000000000000000000000000000000000602082015250565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f76652070617573657220726f6c6520746f20756e706175736500000000000000602082015250565b7f43616e6e6f7420696e6372656173652074686520737570706c7920776974686f60008201527f757420636f6f6c696e6720646f776e0000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f43616e6e6f74206d696e74206d6f7265207468616e20616c6c6f77616e636500600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f7665206d696e74657220726f6c6520746f206d696e7400000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f76652070617573657220726f6c6520746f207061757365000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008201527f696c652070617573656400000000000000000000000000000000000000000000602082015250565b6132ba81612ad1565b81146132c557600080fd5b50565b6132d181612aef565b81146132dc57600080fd5b50565b6132e881612af9565b81146132f357600080fd5b50565b6132ff81612b45565b811461330a57600080fd5b5056fea264697066735822122094f0d95801818a44062d9f05843c6a01620d70a1ee14b1cf70335269bca1184964736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061008c5760003560e01c80638da5cb5b1161005b5780638da5cb5b14610108578063e968095f14610126578063f2fde38b14610156578063f483cdf0146101725761008d565b8063331c62f8146100925780636a1f94b1146100b0578063715018a6146100ce57806378a65fb1146100d85761008d565b5b600080fd5b61009a61018e565b6040516100a791906109f3565b60405180910390f35b6100b86101b8565b6040516100c591906109f3565b60405180910390f35b6100d66101e2565b005b6100f260048036038101906100ed919061086f565b61031c565b6040516100ff9190610abc565b60405180910390f35b6101106103d0565b60405161011d91906109f3565b60405180910390f35b610140600480360381019061013b919061086f565b6103f9565b60405161014d9190610abc565b60405180910390f35b610170600480360381019061016b919061086f565b6104ad565b005b61018c600480360381019061018791906108c1565b610656565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ea6107c0565b73ffffffffffffffffffffffffffffffffffffffff166102086103d0565b73ffffffffffffffffffffffffffffffffffffffff161461025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610a9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161037991906109f3565b60206040518083038186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c9919061092d565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161045691906109f3565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a6919061092d565b9050919050565b6104b56107c0565b73ffffffffffffffffffffffffffffffffffffffff166104d36103d0565b73ffffffffffffffffffffffffffffffffffffffff1614610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052090610a9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090610a7c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b564a7c3385856040518463ffffffff1660e01b81526004016106b793929190610a0e565b602060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610709919061092d565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610768929190610a53565b602060405180830381600087803b15801561078257600080fd5b505af1158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba9190610898565b50505050565b600033905090565b60006107db6107d684610afc565b610ad7565b9050828152602081018484840111156107f357600080fd5b6107fe848285610b91565b509392505050565b60008135905061081581610cbc565b92915050565b60008151905061082a81610cd3565b92915050565b600082601f83011261084157600080fd5b81356108518482602086016107c8565b91505092915050565b60008151905061086981610cea565b92915050565b60006020828403121561088157600080fd5b600061088f84828501610806565b91505092915050565b6000602082840312156108aa57600080fd5b60006108b88482850161081b565b91505092915050565b600080604083850312156108d457600080fd5b600083013567ffffffffffffffff8111156108ee57600080fd5b6108fa85828601610830565b925050602083013567ffffffffffffffff81111561091757600080fd5b61092385828601610830565b9150509250929050565b60006020828403121561093f57600080fd5b600061094d8482850161085a565b91505092915050565b61095f81610b49565b82525050565b600061097082610b2d565b61097a8185610b38565b935061098a818560208601610ba0565b61099381610c33565b840191505092915050565b60006109ab602683610b38565b91506109b682610c44565b604082019050919050565b60006109ce602083610b38565b91506109d982610c93565b602082019050919050565b6109ed81610b87565b82525050565b6000602082019050610a086000830184610956565b92915050565b6000606082019050610a236000830186610956565b8181036020830152610a358185610965565b90508181036040830152610a498184610965565b9050949350505050565b6000604082019050610a686000830185610956565b610a7560208301846109e4565b9392505050565b60006020820190508181036000830152610a958161099e565b9050919050565b60006020820190508181036000830152610ab5816109c1565b9050919050565b6000602082019050610ad160008301846109e4565b92915050565b6000610ae1610af2565b9050610aed8282610bd3565b919050565b6000604051905090565b600067ffffffffffffffff821115610b1757610b16610c04565b5b610b2082610c33565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610b5482610b67565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610bbe578082015181840152602081019050610ba3565b83811115610bcd576000848401525b50505050565b610bdc82610c33565b810181811067ffffffffffffffff82111715610bfb57610bfa610c04565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610cc581610b49565b8114610cd057600080fd5b50565b610cdc81610b5b565b8114610ce757600080fd5b50565b610cf381610b87565b8114610cfe57600080fd5b5056fea26469706673582212206254184f8e86ce8a29d86338ce2ee5c54308d0c891b1e2a0ceb4bbd1610a3c2664736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2206:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:25",
                "type": ""
              }
            ],
            "src": "7:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:25",
                "type": ""
              }
            ],
            "src": "156:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "433:625:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "480:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "489:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "492:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "454:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "463:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "446:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:33:25"
                  },
                  "nodeType": "YulIf",
                  "src": "443:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "506:128:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "521:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "525:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "550:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "596:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "607:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "592:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "592:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "616:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "560:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "560:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "550:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "644:129:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "659:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "663:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "689:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "735:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "746:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "731:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "731:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "755:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "699:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "699:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "689:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "783:129:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "798:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "812:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "802:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "828:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "874:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "885:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "870:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "894:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "838:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "838:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "828:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "922:129:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "937:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "951:2:25",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "941:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "967:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1013:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1024:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1009:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1009:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1033:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "977:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "977:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "967:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "379:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "390:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "402:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "410:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "418:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "426:6:25",
                "type": ""
              }
            ],
            "src": "305:753:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1129:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1146:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1169:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1151:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1139:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1139:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1117:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1124:3:25",
                "type": ""
              }
            ],
            "src": "1064:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:288:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1352:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1364:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1375:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1360:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1352:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1432:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1445:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1456:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1441:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1441:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1388:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1388:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1513:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1526:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1537:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1522:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1522:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1469:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1469:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1469:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1595:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1608:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1619:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1604:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1551:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1551:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1551:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1298:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1310:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1318:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:25",
                "type": ""
              }
            ],
            "src": "1188:442:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1681:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1691:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1720:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1702:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1702:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1691:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1663:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1673:7:25",
                "type": ""
              }
            ],
            "src": "1636:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1783:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1793:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1808:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1815:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1804:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1793:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1765:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1775:7:25",
                "type": ""
              }
            ],
            "src": "1738:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1915:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1925:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1936:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1925:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1897:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1907:7:25",
                "type": ""
              }
            ],
            "src": "1870:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1996:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2053:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2062:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2065:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2055:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2055:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2055:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2019:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2044:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2026:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2026:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2016:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2016:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2009:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2009:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2006:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1989:5:25",
                "type": ""
              }
            ],
            "src": "1953:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2124:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2181:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2190:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2193:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2183:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2183:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2147:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2172:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2154:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2154:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2144:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2134:2:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2117:5:25",
                "type": ""
              }
            ],
            "src": "2081:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9276:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:261:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:75:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "168:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "126:41:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:49:25"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "110:15:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:66:25"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "192:5:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "199:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "185:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "185:21:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "215:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "230:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "237:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "226:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "226:16:25"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "219:3:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "280:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "292:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "261:3:25"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "257:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:16:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "275:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "254:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:25:25"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "329:3:25"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "334:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "339:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "305:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:41:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "305:41:25"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:25",
                "type": ""
              }
            ],
            "src": "7:345:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "442:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "429:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "420:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "485:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "458:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "458:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "458:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "388:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "396:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "404:5:25",
                "type": ""
              }
            ],
            "src": "358:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:77:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "573:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "588:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "582:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "628:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "604:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "604:30:25"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "541:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "549:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "557:5:25",
                "type": ""
              }
            ],
            "src": "503:137:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "722:211:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "780:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "783:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "773:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "773:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "773:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "750:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "758:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "746:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "746:17:25"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "765:3:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "735:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "732:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "796:34:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "823:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "810:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:20:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "800:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "839:88:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "900:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "908:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:17:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "915:6:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "923:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "848:47:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "848:79:25"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "839:5:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "700:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "708:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "716:5:25",
                "type": ""
              }
            ],
            "src": "660:273:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1002:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1012:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1012:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1070:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1043:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1043:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "980:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "988:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "996:5:25",
                "type": ""
              }
            ],
            "src": "939:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1154:196:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1200:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1209:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1202:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1202:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1202:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1175:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1196:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1167:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1164:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1226:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1241:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1245:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1270:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1305:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1316:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1301:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1301:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1325:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1280:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1280:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1270:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1124:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1135:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1147:6:25",
                "type": ""
              }
            ],
            "src": "1088:262:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1430:204:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1476:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1485:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1488:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1478:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1478:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1478:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1451:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1460:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1447:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1440:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1502:125:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1517:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1531:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1521:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1546:71:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1589:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1600:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1585:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1585:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1609:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1556:28:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1556:61:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1546:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1400:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1411:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1423:6:25",
                "type": ""
              }
            ],
            "src": "1356:278:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1743:530:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1789:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1798:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1801:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1791:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1791:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1791:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1764:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1773:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1760:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1760:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1756:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1756:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1753:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1815:220:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1830:45:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1861:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1872:1:25",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1857:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1857:17:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1844:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1844:31:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1834:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1922:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1931:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1934:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1924:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1924:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1924:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1894:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1902:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1891:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "1888:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1952:73:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1997:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2008:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1993:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1993:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2017:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1962:30:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1962:63:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1952:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2045:221:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2060:46:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2091:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2102:2:25",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2087:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2087:18:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2074:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:32:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2064:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2153:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2162:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2165:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2155:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2155:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2155:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2125:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2122:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2122:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "2119:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2183:73:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2228:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2239:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2224:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2224:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2248:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2193:30:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2193:63:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2183:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1705:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1716:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1728:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1736:6:25",
                "type": ""
              }
            ],
            "src": "1640:633:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2356:207:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2402:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2411:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2414:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2404:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2404:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2404:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2377:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2386:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2373:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2373:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2398:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2369:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2369:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2366:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2428:128:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2443:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2447:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2472:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2518:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2529:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2514:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2514:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2538:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2482:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2472:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2326:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2337:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2349:6:25",
                "type": ""
              }
            ],
            "src": "2279:284:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2634:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2651:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2674:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2656:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2644:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2644:37:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2622:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2629:3:25",
                "type": ""
              }
            ],
            "src": "2569:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2785:272:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2795:53:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2842:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2809:32:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:39:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2799:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2857:78:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2923:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2928:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2864:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2864:71:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2857:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2970:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2977:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2966:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2966:16:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2984:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2989:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2944:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2944:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3005:46:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3016:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3043:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3021:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3021:29:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3012:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3012:39:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3005:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2766:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2773:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2781:3:25",
                "type": ""
              }
            ],
            "src": "2693:364:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3209:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3219:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3285:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3290:2:25",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3226:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3226:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3219:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3391:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "3302:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3302:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3302:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3404:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3415:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3420:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3411:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3404:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3197:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3205:3:25",
                "type": ""
              }
            ],
            "src": "3063:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3581:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3591:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3657:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3662:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3598:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3591:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3763:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "3674:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3674:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3674:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3776:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3787:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3792:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3783:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3783:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3776:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3569:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3577:3:25",
                "type": ""
              }
            ],
            "src": "3435:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3872:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3889:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3912:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3894:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3894:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3882:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3882:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3882:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3860:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3867:3:25",
                "type": ""
              }
            ],
            "src": "3807:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4029:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4039:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4051:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4062:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4047:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4047:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4039:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4119:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4132:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4143:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4128:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4128:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4075:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4075:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4075:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4001:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4013:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4024:4:25",
                "type": ""
              }
            ],
            "src": "3931:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4353:430:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4363:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4375:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4371:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4371:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4363:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4443:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4456:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4467:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4452:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4452:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4399:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4399:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4399:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4491:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4502:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4487:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4487:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4511:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4517:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4507:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4507:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4480:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:48:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4480:48:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4537:86:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4609:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4618:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4545:63:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4545:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4537:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4644:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4655:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4640:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4640:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4664:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4670:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4660:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4660:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4633:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4633:48:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4633:48:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4690:86:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4762:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4771:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4698:63:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4690:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4309:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4321:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4329:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4337:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4348:4:25",
                "type": ""
              }
            ],
            "src": "4159:624:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4915:206:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4925:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4937:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4948:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4933:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4925:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5005:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5018:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5029:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5014:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5014:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4961:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4961:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4961:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5086:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5099:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5110:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5095:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5095:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5042:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5042:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5042:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4879:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4891:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4899:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4910:4:25",
                "type": ""
              }
            ],
            "src": "4789:332:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5298:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5308:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5320:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5331:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5316:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5316:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5308:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5355:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5366:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5351:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5374:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5380:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5370:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5370:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5344:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5344:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5400:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5534:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5408:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5408:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5400:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5278:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5293:4:25",
                "type": ""
              }
            ],
            "src": "5127:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5723:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5733:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5745:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5756:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5741:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5741:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5733:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5780:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5791:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5776:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5776:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5799:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5805:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5795:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5795:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5769:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5769:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5769:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5825:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5959:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5833:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5833:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5825:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5703:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5718:4:25",
                "type": ""
              }
            ],
            "src": "5552:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6075:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6085:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6097:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6108:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6093:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6093:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6085:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6165:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6178:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6189:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6174:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6174:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6121:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6121:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6121:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6047:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6059:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6070:4:25",
                "type": ""
              }
            ],
            "src": "5977:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6246:88:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6256:30:25",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "6266:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6266:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6256:6:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6315:6:25"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6323:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "6295:19:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6295:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6295:33:25"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6230:4:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6239:6:25",
                "type": ""
              }
            ],
            "src": "6205:129:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6380:35:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6390:19:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6406:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6400:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6400:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6390:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6373:6:25",
                "type": ""
              }
            ],
            "src": "6340:75:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6488:241:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6593:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6595:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6595:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6595:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6565:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6573:18:25",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6562:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6562:30:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6559:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6625:37:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6655:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6633:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6625:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6699:23:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6711:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6717:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6707:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6707:15:25"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6699:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6472:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6483:4:25",
                "type": ""
              }
            ],
            "src": "6421:308:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6794:40:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6805:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6821:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6815:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6815:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6805:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6777:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6787:6:25",
                "type": ""
              }
            ],
            "src": "6735:99:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6936:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6953:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6958:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6946:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6946:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6974:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6993:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6998:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6989:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6989:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6974:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6908:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6913:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6924:11:25",
                "type": ""
              }
            ],
            "src": "6840:169:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7060:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7070:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7099:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7081:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7081:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7070:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7042:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7052:7:25",
                "type": ""
              }
            ],
            "src": "7015:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7159:48:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7169:32:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7194:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7187:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7187:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7180:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7180:21:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7169:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7141:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7151:7:25",
                "type": ""
              }
            ],
            "src": "7117:90:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7258:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7268:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7283:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7290:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7279:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7279:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7268:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7240:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7250:7:25",
                "type": ""
              }
            ],
            "src": "7213:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7390:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7400:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7411:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7400:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7372:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7382:7:25",
                "type": ""
              }
            ],
            "src": "7345:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7479:103:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "7502:3:25"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "7507:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7512:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "7489:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7489:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7489:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "7560:3:25"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7565:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7556:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7556:16:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7574:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7549:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7549:27:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7549:27:25"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7461:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7466:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7471:6:25",
                "type": ""
              }
            ],
            "src": "7428:154:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7637:258:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7647:10:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7656:1:25",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7651:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7716:63:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7741:3:25"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7746:1:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7737:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7737:11:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7760:3:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7765:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7756:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7756:11:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7750:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7750:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7730:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7730:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7730:39:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7677:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7680:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7674:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7674:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7688:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7690:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7699:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7702:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7695:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7695:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7690:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7670:3:25",
                    "statements": []
                  },
                  "src": "7666:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7813:76:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7863:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7868:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7859:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7859:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7877:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7852:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7852:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7852:27:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7794:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7797:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7791:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7791:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7788:2:25"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7619:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7624:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7629:6:25",
                "type": ""
              }
            ],
            "src": "7588:307:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7944:238:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7954:58:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7976:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "8006:4:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7984:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7984:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7972:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7972:40:25"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7958:10:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8123:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8125:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8125:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8125:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8066:10:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8078:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8063:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8063:34:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8102:10:25"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8114:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8099:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8099:22:25"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8060:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8060:62:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8057:2:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8161:2:25",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8165:10:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8154:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8154:22:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8154:22:25"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7930:6:25",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7938:4:25",
                "type": ""
              }
            ],
            "src": "7901:281:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8216:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8233:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8236:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8226:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8226:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8226:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8330:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8333:4:25",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8323:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8323:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8323:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8354:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8357:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8347:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8347:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8347:15:25"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8188:180:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8422:54:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8432:38:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8450:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8457:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8446:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8446:14:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8466:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8462:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8462:7:25"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8442:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8442:28:25"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "8432:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8405:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "8415:6:25",
                "type": ""
              }
            ],
            "src": "8374:102:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8588:119:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8610:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8618:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8606:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8606:14:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8622:34:25",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8599:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8599:58:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8599:58:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8678:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8686:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8674:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8674:15:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8691:8:25",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8667:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8667:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8667:33:25"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8580:6:25",
                "type": ""
              }
            ],
            "src": "8482:225:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8819:76:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8841:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8849:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8837:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8837:14:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8853:34:25",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8830:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8830:58:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8830:58:25"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8811:6:25",
                "type": ""
              }
            ],
            "src": "8713:182:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8944:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9001:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9010:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9013:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9003:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9003:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9003:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8967:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8992:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8974:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8974:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8964:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8964:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8957:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8957:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8954:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8937:5:25",
                "type": ""
              }
            ],
            "src": "8901:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9069:76:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9123:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9132:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9135:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9125:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9125:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9125:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9092:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9114:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9099:14:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9099:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9089:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9089:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9082:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9082:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "9079:2:25"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9062:5:25",
                "type": ""
              }
            ],
            "src": "9029:116:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9194:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9251:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9260:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9263:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9253:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9253:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9253:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9217:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9242:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9224:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9224:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9214:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9214:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9207:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9207:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "9204:2:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9187:5:25",
                "type": ""
              }
            ],
            "src": "9151:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "82:1244:1:-:0;;;177:322;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:6;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;377:7:1;359;;:26;;;;;;;;;;;;;;;;;;420:15;437:27;466:24;405:86;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;396:6;;:95;;;;;;;;;;;;;;;;;;177:322;;;;82:1244;;586:96:19;639:7;665:10;658:17;;586:96;:::o;82:1244:1:-;;;;;;;;:::o;7:143:25:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;;;;;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:118::-;1151:24;1169:5;1151:24;:::i;:::-;1146:3;1139:37;1129:53;;:::o;1188:442::-;;1375:2;1364:9;1360:18;1352:26;;1388:71;1456:1;1445:9;1441:17;1432:6;1388:71;:::i;:::-;1469:72;1537:2;1526:9;1522:18;1513:6;1469:72;:::i;:::-;1551;1619:2;1608:9;1604:18;1595:6;1551:72;:::i;:::-;1342:288;;;;;;:::o;1636:96::-;;1702:24;1720:5;1702:24;:::i;:::-;1691:35;;1681:51;;;:::o;1738:126::-;;1815:42;1808:5;1804:54;1793:65;;1783:81;;;:::o;1870:77::-;;1936:5;1925:16;;1915:32;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:2;;2065:1;2062;2055:12;2006:2;1996:79;:::o;2081:122::-;2154:24;2172:5;2154:24;:::i;:::-;2147:5;2144:35;2134:2;;2193:1;2190;2183:12;2134:2;2124:79;:::o;82:1244:1:-;;;;;;;",
  "deployedSourceMap": "82:1244:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:8;;;733:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:6;;;:::i;:::-;;1129:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:133:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;507:214:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;733:115;790:15;832:7;;;;;;;;;;;817:23;;733:115;:::o;860:112::-;916:14;957:6;;;;;;;;;;;942:22;;860:112;:::o;1700:145:6:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1129:132:1:-;1195:13;1227:6;;;;;;;;;;;:16;;;1244:8;1227:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1220:33;;1129:132;;;:::o;1068:85:6:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;984:133:1:-;1050:13;1082:7;;;;;;;;;;;:17;;;1100:8;1082:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1075:34;;984:133;;;:::o;1994:240:6:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;507:214:1:-;602:11;616:7;;;;;;;;;;;:17;;;634:10;646;658:8;616:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;602:65;;678:6;;;;;;;;;;;:15;;;694:10;706:6;678:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;507:214;;;:::o;586:96:19:-;639:7;665:10;658:17;;586:96;:::o;7:345:25:-;;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:139::-;;442:6;429:20;420:29;;458:33;485:5;458:33;:::i;:::-;410:87;;;;:::o;503:137::-;;588:6;582:13;573:22;;604:30;628:5;604:30;:::i;:::-;563:77;;;;:::o;660:273::-;;765:3;758:4;750:6;746:17;742:27;732:2;;783:1;780;773:12;732:2;823:6;810:20;848:79;923:3;915:6;908:4;900:6;896:17;848:79;:::i;:::-;839:88;;722:211;;;;;:::o;939:143::-;;1027:6;1021:13;1012:22;;1043:33;1070:5;1043:33;:::i;:::-;1002:80;;;;:::o;1088:262::-;;1196:2;1184:9;1175:7;1171:23;1167:32;1164:2;;;1212:1;1209;1202:12;1164:2;1255:1;1280:53;1325:7;1316:6;1305:9;1301:22;1280:53;:::i;:::-;1270:63;;1226:117;1154:196;;;;:::o;1356:278::-;;1472:2;1460:9;1451:7;1447:23;1443:32;1440:2;;;1488:1;1485;1478:12;1440:2;1531:1;1556:61;1609:7;1600:6;1589:9;1585:22;1556:61;:::i;:::-;1546:71;;1502:125;1430:204;;;;:::o;1640:633::-;;;1785:2;1773:9;1764:7;1760:23;1756:32;1753:2;;;1801:1;1798;1791:12;1753:2;1872:1;1861:9;1857:17;1844:31;1902:18;1894:6;1891:30;1888:2;;;1934:1;1931;1924:12;1888:2;1962:63;2017:7;2008:6;1997:9;1993:22;1962:63;:::i;:::-;1952:73;;1815:220;2102:2;2091:9;2087:18;2074:32;2133:18;2125:6;2122:30;2119:2;;;2165:1;2162;2155:12;2119:2;2193:63;2248:7;2239:6;2228:9;2224:22;2193:63;:::i;:::-;2183:73;;2045:221;1743:530;;;;;:::o;2279:284::-;;2398:2;2386:9;2377:7;2373:23;2369:32;2366:2;;;2414:1;2411;2404:12;2366:2;2457:1;2482:64;2538:7;2529:6;2518:9;2514:22;2482:64;:::i;:::-;2472:74;;2428:128;2356:207;;;;:::o;2569:118::-;2656:24;2674:5;2656:24;:::i;:::-;2651:3;2644:37;2634:53;;:::o;2693:364::-;;2809:39;2842:5;2809:39;:::i;:::-;2864:71;2928:6;2923:3;2864:71;:::i;:::-;2857:78;;2944:52;2989:6;2984:3;2977:4;2970:5;2966:16;2944:52;:::i;:::-;3021:29;3043:6;3021:29;:::i;:::-;3016:3;3012:39;3005:46;;2785:272;;;;;:::o;3063:366::-;;3226:67;3290:2;3285:3;3226:67;:::i;:::-;3219:74;;3302:93;3391:3;3302:93;:::i;:::-;3420:2;3415:3;3411:12;3404:19;;3209:220;;;:::o;3435:366::-;;3598:67;3662:2;3657:3;3598:67;:::i;:::-;3591:74;;3674:93;3763:3;3674:93;:::i;:::-;3792:2;3787:3;3783:12;3776:19;;3581:220;;;:::o;3807:118::-;3894:24;3912:5;3894:24;:::i;:::-;3889:3;3882:37;3872:53;;:::o;3931:222::-;;4062:2;4051:9;4047:18;4039:26;;4075:71;4143:1;4132:9;4128:17;4119:6;4075:71;:::i;:::-;4029:124;;;;:::o;4159:624::-;;4386:2;4375:9;4371:18;4363:26;;4399:71;4467:1;4456:9;4452:17;4443:6;4399:71;:::i;:::-;4517:9;4511:4;4507:20;4502:2;4491:9;4487:18;4480:48;4545:78;4618:4;4609:6;4545:78;:::i;:::-;4537:86;;4670:9;4664:4;4660:20;4655:2;4644:9;4640:18;4633:48;4698:78;4771:4;4762:6;4698:78;:::i;:::-;4690:86;;4353:430;;;;;;:::o;4789:332::-;;4948:2;4937:9;4933:18;4925:26;;4961:71;5029:1;5018:9;5014:17;5005:6;4961:71;:::i;:::-;5042:72;5110:2;5099:9;5095:18;5086:6;5042:72;:::i;:::-;4915:206;;;;;:::o;5127:419::-;;5331:2;5320:9;5316:18;5308:26;;5380:9;5374:4;5370:20;5366:1;5355:9;5351:17;5344:47;5408:131;5534:4;5408:131;:::i;:::-;5400:139;;5298:248;;;:::o;5552:419::-;;5756:2;5745:9;5741:18;5733:26;;5805:9;5799:4;5795:20;5791:1;5780:9;5776:17;5769:47;5833:131;5959:4;5833:131;:::i;:::-;5825:139;;5723:248;;;:::o;5977:222::-;;6108:2;6097:9;6093:18;6085:26;;6121:71;6189:1;6178:9;6174:17;6165:6;6121:71;:::i;:::-;6075:124;;;;:::o;6205:129::-;;6266:20;;:::i;:::-;6256:30;;6295:33;6323:4;6315:6;6295:33;:::i;:::-;6246:88;;;:::o;6340:75::-;;6406:2;6400:9;6390:19;;6380:35;:::o;6421:308::-;;6573:18;6565:6;6562:30;6559:2;;;6595:18;;:::i;:::-;6559:2;6633:29;6655:6;6633:29;:::i;:::-;6625:37;;6717:4;6711;6707:15;6699:23;;6488:241;;;:::o;6735:99::-;;6821:5;6815:12;6805:22;;6794:40;;;:::o;6840:169::-;;6958:6;6953:3;6946:19;6998:4;6993:3;6989:14;6974:29;;6936:73;;;;:::o;7015:96::-;;7081:24;7099:5;7081:24;:::i;:::-;7070:35;;7060:51;;;:::o;7117:90::-;;7194:5;7187:13;7180:21;7169:32;;7159:48;;;:::o;7213:126::-;;7290:42;7283:5;7279:54;7268:65;;7258:81;;;:::o;7345:77::-;;7411:5;7400:16;;7390:32;;;:::o;7428:154::-;7512:6;7507:3;7502;7489:30;7574:1;7565:6;7560:3;7556:16;7549:27;7479:103;;;:::o;7588:307::-;7656:1;7666:113;7680:6;7677:1;7674:13;7666:113;;;7765:1;7760:3;7756:11;7750:18;7746:1;7741:3;7737:11;7730:39;7702:2;7699:1;7695:10;7690:15;;7666:113;;;7797:6;7794:1;7791:13;7788:2;;;7877:1;7868:6;7863:3;7859:16;7852:27;7788:2;7637:258;;;;:::o;7901:281::-;7984:27;8006:4;7984:27;:::i;:::-;7976:6;7972:40;8114:6;8102:10;8099:22;8078:18;8066:10;8063:34;8060:62;8057:2;;;8125:18;;:::i;:::-;8057:2;8165:10;8161:2;8154:22;7944:238;;;:::o;8188:180::-;8236:77;8233:1;8226:88;8333:4;8330:1;8323:15;8357:4;8354:1;8347:15;8374:102;;8466:2;8462:7;8457:2;8450:5;8446:14;8442:28;8432:38;;8422:54;;;:::o;8482:225::-;8622:34;8618:1;8610:6;8606:14;8599:58;8691:8;8686:2;8678:6;8674:15;8667:33;8588:119;:::o;8713:182::-;8853:34;8849:1;8841:6;8837:14;8830:58;8819:76;:::o;8901:122::-;8974:24;8992:5;8974:24;:::i;:::-;8967:5;8964:35;8954:2;;9013:1;9010;9003:12;8954:2;8944:79;:::o;9029:116::-;9099:21;9114:5;9099:21;:::i;:::-;9092:5;9089:32;9079:2;;9135:1;9132;9125:12;9079:2;9069:76;:::o;9151:122::-;9224:24;9242:5;9224:24;:::i;:::-;9217:5;9214:35;9204:2;;9263:1;9260;9253:12;9204:2;9194:79;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport './OpenNFT.sol';\r\nimport './NobelToken.sol';\r\n\r\ncontract NobelMain is Ownable {\r\n    \r\n    OpenNFT litters;\r\n    NobelToken nobels;\r\n    \r\n    constructor (\r\n        address _litter,\r\n        uint _initial_supply,\r\n        uint _minting_allowance_per_call,\r\n        uint _cool_down_time_per_mint\r\n        ) public {\r\n        litters = OpenNFT(_litter);\r\n        nobels = new NobelToken(_initial_supply, _minting_allowance_per_call, _cool_down_time_per_mint);\r\n    }\r\n\r\n    function createNobelLitter(string memory _litterUri, string memory _caption) public {\r\n        uint reward = litters.createNFT(msg.sender, _litterUri, _caption);\r\n        nobels.transfer(msg.sender, reward);\r\n    }\r\n    \r\n    function getLittersContractAddress() public view returns(address litter_){\r\n        return address(litters);\r\n    }\r\n    \r\n    function getNobelsContractAddress() public view returns(address nobel_){\r\n        return address(nobels);\r\n    }\r\n    \r\n    function getBalanceOfLitter(address _checker) public view returns(uint balance_){\r\n        return litters.balanceOf(_checker);\r\n    }\r\n    \r\n    function getBalanceOfNobels(address _checker) public view returns(uint balance_){\r\n        return nobels.balanceOf(_checker);\r\n    }\r\n\r\n    fallback () external {\r\n        revert();\r\n    }\r\n    \r\n}",
  "sourcePath": "E:/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelMain.sol",
  "ast": {
    "absolutePath": "/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelMain.sol",
    "exportedSymbols": {
      "AccessControl": [
        902
      ],
      "AccessControlEnumerable": [
        1092
      ],
      "Address": [
        3416
      ],
      "Context": [
        3439
      ],
      "Counters": [
        3500
      ],
      "ERC165": [
        3727
      ],
      "ERC20": [
        1795
      ],
      "ERC20Burnable": [
        1934
      ],
      "ERC20Pausable": [
        1971
      ],
      "ERC20PresetMinterPauser": [
        2107
      ],
      "ERC721": [
        2928
      ],
      "EnumerableSet": [
        4254
      ],
      "IAccessControl": [
        622
      ],
      "IAccessControlEnumerable": [
        924
      ],
      "IERC165": [
        3739
      ],
      "IERC20": [
        1873
      ],
      "IERC721": [
        3044
      ],
      "IERC721Enumerable": [
        3093
      ],
      "IERC721Metadata": [
        3120
      ],
      "IERC721Receiver": [
        3062
      ],
      "NobelMain": [
        158
      ],
      "NobelToken": [
        295
      ],
      "OpenNFT": [
        579
      ],
      "Ownable": [
        1202
      ],
      "Pausable": [
        1294
      ],
      "Strings": [
        3703
      ]
    },
    "id": 159,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/OpenNFT.sol",
        "file": "./OpenNFT.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 159,
        "sourceUnit": 580,
        "src": "27:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelToken.sol",
        "file": "./NobelToken.sol",
        "id": 40,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 159,
        "sourceUnit": 296,
        "src": "52:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1202,
              "src": "104:7:1"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "104:7:1"
          }
        ],
        "contractDependencies": [
          295,
          1202,
          3439
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 158,
        "linearizedBaseContracts": [
          158,
          1202,
          3439
        ],
        "name": "NobelMain",
        "nameLocation": "91:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "litters",
            "nameLocation": "133:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 158,
            "src": "125:15:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OpenNFT_$579",
              "typeString": "contract OpenNFT"
            },
            "typeName": {
              "id": 44,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43,
                "name": "OpenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 579,
                "src": "125:7:1"
              },
              "referencedDeclaration": 579,
              "src": "125:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OpenNFT_$579",
                "typeString": "contract OpenNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "nobels",
            "nameLocation": "158:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 158,
            "src": "147:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NobelToken_$295",
              "typeString": "contract NobelToken"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "NobelToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 295,
                "src": "147:10:1"
              },
              "referencedDeclaration": 295,
              "src": "147:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NobelToken_$295",
                "typeString": "contract NobelToken"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "348:151:1",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "litters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "359:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$579",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61,
                          "name": "_litter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "OpenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "369:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenNFT_$579_$",
                          "typeString": "type(contract OpenNFT)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "369:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$579",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "src": "359:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OpenNFT_$579",
                      "typeString": "contract OpenNFT"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "359:26:1"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "nobels",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "396:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$295",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 69,
                          "name": "_initial_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "420:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 70,
                          "name": "_minting_allowance_per_call",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "437:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 71,
                          "name": "_cool_down_time_per_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "466:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "405:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_NobelToken_$295_$",
                          "typeString": "function (uint256,uint256,uint256) returns (contract NobelToken)"
                        },
                        "typeName": {
                          "id": 67,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 66,
                            "name": "NobelToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "409:10:1"
                          },
                          "referencedDeclaration": 295,
                          "src": "409:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NobelToken_$295",
                            "typeString": "contract NobelToken"
                          }
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:86:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$295",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "src": "396:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NobelToken_$295",
                      "typeString": "contract NobelToken"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "396:95:1"
                }
              ]
            },
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_litter",
                  "nameLocation": "208:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "200:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_initial_supply",
                  "nameLocation": "231:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "226:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_minting_allowance_per_call",
                  "nameLocation": "262:27:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "257:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_cool_down_time_per_mint",
                  "nameLocation": "305:24:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "300:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:151:1"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:1"
            },
            "scope": 158,
            "src": "177:322:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "591:130:1",
              "statements": [
                {
                  "assignments": [
                    84
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "607:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 101,
                      "src": "602:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "634:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "634:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "_litterUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "646:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 90,
                        "name": "_caption",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "658:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 85,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "616:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory,string memory) external returns (uint256)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "602:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "694:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "694:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "706:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 93,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "678:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1408,
                      "src": "678:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "678:35:1"
                }
              ]
            },
            "functionSelector": "f483cdf0",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNobelLitter",
            "nameLocation": "516:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_litterUri",
                  "nameLocation": "548:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "534:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_caption",
                  "nameLocation": "574:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "560:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:50:1"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:1"
            },
            "scope": 158,
            "src": "507:214:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "806:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 109,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "832:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      ],
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "824:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "824:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 111,
                  "nodeType": "Return",
                  "src": "817:23:1"
                }
              ]
            },
            "functionSelector": "331c62f8",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLittersContractAddress",
            "nameLocation": "742:25:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:2:1"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "litter_",
                  "nameLocation": "798:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "790:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:17:1"
            },
            "scope": 158,
            "src": "733:115:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "931:41:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "957:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      ],
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "949:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 118,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "949:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "942:22:1"
                }
              ]
            },
            "functionSelector": "6a1f94b1",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNobelsContractAddress",
            "nameLocation": "869:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:2:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nobel_",
                  "nameLocation": "924:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "916:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "915:16:1"
            },
            "scope": 158,
            "src": "860:112:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1064:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1100:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 131,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1082:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2226,
                      "src": "1082:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "1075:34:1"
                }
              ]
            },
            "functionSelector": "e968095f",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfLitter",
            "nameLocation": "993:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "1020:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1012:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:18:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1055:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1050:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:15:1"
            },
            "scope": 158,
            "src": "984:133:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1209:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1244:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1387,
                      "src": "1227:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1227:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1220:33:1"
                }
              ]
            },
            "functionSelector": "78a65fb1",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfNobels",
            "nameLocation": "1138:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "1165:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1157:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:18:1"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1200:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1195:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1194:15:1"
            },
            "scope": 158,
            "src": "1129:132:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1290:27:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 153,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1301:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:8:1"
                }
              ]
            },
            "id": 157,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:2:1"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:0:1"
            },
            "scope": 158,
            "src": "1269:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 159,
        "src": "82:1244:1"
      }
    ],
    "src": "0:1326:1"
  },
  "legacyAST": {
    "absolutePath": "/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelMain.sol",
    "exportedSymbols": {
      "AccessControl": [
        902
      ],
      "AccessControlEnumerable": [
        1092
      ],
      "Address": [
        3416
      ],
      "Context": [
        3439
      ],
      "Counters": [
        3500
      ],
      "ERC165": [
        3727
      ],
      "ERC20": [
        1795
      ],
      "ERC20Burnable": [
        1934
      ],
      "ERC20Pausable": [
        1971
      ],
      "ERC20PresetMinterPauser": [
        2107
      ],
      "ERC721": [
        2928
      ],
      "EnumerableSet": [
        4254
      ],
      "IAccessControl": [
        622
      ],
      "IAccessControlEnumerable": [
        924
      ],
      "IERC165": [
        3739
      ],
      "IERC20": [
        1873
      ],
      "IERC721": [
        3044
      ],
      "IERC721Enumerable": [
        3093
      ],
      "IERC721Metadata": [
        3120
      ],
      "IERC721Receiver": [
        3062
      ],
      "NobelMain": [
        158
      ],
      "NobelToken": [
        295
      ],
      "OpenNFT": [
        579
      ],
      "Ownable": [
        1202
      ],
      "Pausable": [
        1294
      ],
      "Strings": [
        3703
      ]
    },
    "id": 159,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/OpenNFT.sol",
        "file": "./OpenNFT.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 159,
        "sourceUnit": 580,
        "src": "27:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Projects/BlockchainBootcamp/open-nft-marketplace/contracts/NobelToken.sol",
        "file": "./NobelToken.sol",
        "id": 40,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 159,
        "sourceUnit": 296,
        "src": "52:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1202,
              "src": "104:7:1"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "104:7:1"
          }
        ],
        "contractDependencies": [
          295,
          1202,
          3439
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 158,
        "linearizedBaseContracts": [
          158,
          1202,
          3439
        ],
        "name": "NobelMain",
        "nameLocation": "91:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "litters",
            "nameLocation": "133:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 158,
            "src": "125:15:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OpenNFT_$579",
              "typeString": "contract OpenNFT"
            },
            "typeName": {
              "id": 44,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43,
                "name": "OpenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 579,
                "src": "125:7:1"
              },
              "referencedDeclaration": 579,
              "src": "125:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OpenNFT_$579",
                "typeString": "contract OpenNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "nobels",
            "nameLocation": "158:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 158,
            "src": "147:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NobelToken_$295",
              "typeString": "contract NobelToken"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "NobelToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 295,
                "src": "147:10:1"
              },
              "referencedDeclaration": 295,
              "src": "147:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NobelToken_$295",
                "typeString": "contract NobelToken"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "348:151:1",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "litters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "359:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$579",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61,
                          "name": "_litter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "OpenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "369:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenNFT_$579_$",
                          "typeString": "type(contract OpenNFT)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "369:16:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OpenNFT_$579",
                        "typeString": "contract OpenNFT"
                      }
                    },
                    "src": "359:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OpenNFT_$579",
                      "typeString": "contract OpenNFT"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "359:26:1"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "nobels",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "396:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$295",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 69,
                          "name": "_initial_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "420:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 70,
                          "name": "_minting_allowance_per_call",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "437:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 71,
                          "name": "_cool_down_time_per_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "466:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "405:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_NobelToken_$295_$",
                          "typeString": "function (uint256,uint256,uint256) returns (contract NobelToken)"
                        },
                        "typeName": {
                          "id": 67,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 66,
                            "name": "NobelToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 295,
                            "src": "409:10:1"
                          },
                          "referencedDeclaration": 295,
                          "src": "409:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NobelToken_$295",
                            "typeString": "contract NobelToken"
                          }
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:86:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NobelToken_$295",
                        "typeString": "contract NobelToken"
                      }
                    },
                    "src": "396:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NobelToken_$295",
                      "typeString": "contract NobelToken"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "396:95:1"
                }
              ]
            },
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_litter",
                  "nameLocation": "208:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "200:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_initial_supply",
                  "nameLocation": "231:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "226:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_minting_allowance_per_call",
                  "nameLocation": "262:27:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "257:32:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_cool_down_time_per_mint",
                  "nameLocation": "305:24:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "300:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:151:1"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:1"
            },
            "scope": 158,
            "src": "177:322:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "591:130:1",
              "statements": [
                {
                  "assignments": [
                    84
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "607:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 101,
                      "src": "602:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "634:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "634:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "_litterUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "646:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 90,
                        "name": "_caption",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "658:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 85,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "616:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory,string memory) external returns (uint256)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "602:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "694:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "694:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "706:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 93,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "678:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1408,
                      "src": "678:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "678:35:1"
                }
              ]
            },
            "functionSelector": "f483cdf0",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNobelLitter",
            "nameLocation": "516:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_litterUri",
                  "nameLocation": "548:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "534:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_caption",
                  "nameLocation": "574:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "560:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:50:1"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:1"
            },
            "scope": 158,
            "src": "507:214:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "806:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 109,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "832:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      ],
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "824:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "824:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 111,
                  "nodeType": "Return",
                  "src": "817:23:1"
                }
              ]
            },
            "functionSelector": "331c62f8",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLittersContractAddress",
            "nameLocation": "742:25:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:2:1"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "litter_",
                  "nameLocation": "798:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "790:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:17:1"
            },
            "scope": 158,
            "src": "733:115:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "931:41:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "957:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      ],
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "949:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 118,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "949:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "942:22:1"
                }
              ]
            },
            "functionSelector": "6a1f94b1",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNobelsContractAddress",
            "nameLocation": "869:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:2:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nobel_",
                  "nameLocation": "924:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "916:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "915:16:1"
            },
            "scope": 158,
            "src": "860:112:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1064:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1100:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 131,
                        "name": "litters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1082:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenNFT_$579",
                          "typeString": "contract OpenNFT"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2226,
                      "src": "1082:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "1075:34:1"
                }
              ]
            },
            "functionSelector": "e968095f",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfLitter",
            "nameLocation": "993:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "1020:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1012:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:18:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1055:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1050:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:15:1"
            },
            "scope": 158,
            "src": "984:133:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1209:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "_checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1244:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "nobels",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NobelToken_$295",
                          "typeString": "contract NobelToken"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1387,
                      "src": "1227:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1227:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1220:33:1"
                }
              ]
            },
            "functionSelector": "78a65fb1",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceOfNobels",
            "nameLocation": "1138:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_checker",
                  "nameLocation": "1165:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1157:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:18:1"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "balance_",
                  "nameLocation": "1200:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1195:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1194:15:1"
            },
            "scope": 158,
            "src": "1129:132:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1290:27:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 153,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1301:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:8:1"
                }
              ]
            },
            "id": 157,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:2:1"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:0:1"
            },
            "scope": 158,
            "src": "1269:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 159,
        "src": "82:1244:1"
      }
    ],
    "src": "0:1326:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x334138d0e75cc9A7Fc9aaCE0b5C97F03451882C7",
      "transactionHash": "0xadd959dfefe717129ccc4fead23fba0d2068065ff837b8f2a592db4c94d9a487"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-24T17:29:38.712Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}